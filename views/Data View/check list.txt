How is data being processed currently?
Where is the data being stored and used?
How much data are we talking about?


Is there a high level understanding of how much storage will be required to persist data?
* What are the archiving and back-up strategies?
* Are there any regulatory requirements for the long term archival of business data?
* Likewise for log files and audit trails?
* Backup. If an application requires 24X7 availability, a special database design needs to be considered; allowing backup of the database while it is still running. 
* Replication. If replication is involved, how will the replication occur, (e.g., near real time, hourly, every night, etc.)? 
* Language. Evaluate the data requirements and the needs of the end users to see if multi-lingual options need to be provided and how. 
* Data Security. What are the data security requirements for the data? 
* Database Recovery. How to achieve business continuity if something happens to the database. 

# Data Access Layer
* Database schema is not coupled to your application model.
* Connections are opened as late as possible and released quickly.
* Data integrity is enforced in the database, not in the data access layer.
* Business decisions are made in the business layer, not the data access layer.
* Database is not directly accessed; database access is routed through the data access layer.
* Resource gateways are used to access resources outside the application.

# Concurrency and Transactions Design
* Business-critical operations are wrapped in transactions.
* Connection-based transactions are used in the case of a single data source.
* Transaction Scope (System.Transaction) is used in the case of multiple data sources.
* Compensating methods are used to revert the data store to its previous state when transactions are not used.
* Locks are not held for long periods during long-running atomic transactions.

# Data layer
* Are there other applications, which must share the data server? If so, please identify them and describe the data and data access requirements.
* Has the resource demand generated by the application been measured and what is the value? If so, has the capacity of the planned server been confirmed at the application and aggregate levels?
* Does the database support collocation on a DB cluster?
* What relational database management system does your application support: Oracle, MS SQL, MySQL, DB2, Sybase, etc
* Does your application use/require NoSQL?
